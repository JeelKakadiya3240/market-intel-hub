Project Description- Awais

Overview
This platform is a comprehensive market intelligence and startup ecosystem tracker for investors, founders, and analysts. It provides structured, real-time insights into startups, funding rounds, rankings, and key events. The core goal is to streamline opportunity discovery, due diligence, and investor-founder matchmaking across the private capital landscape.
Key Users
Founders / Startup Teams
Angel Investors
VCs and PE Analysts
Investment Firms & Family Offices
Accelerators / Incubators
Economic Development Agencies
Researchers and Journalists
Core Problem
Early-stage market intelligence is fragmented and slow to surface. Investors struggle to find the right companies. Startups struggle to gain visibility or discover funding opportunities. The market needs a one-stop, structured, and live data platform where these two groups can connect into a social network.
Our Solution
A unified web-based tool offering:
Startup + investor data
Real-time funding activity
Crowdfunding & grant discovery
Rankings and benchmarking tools
Compliance lists (e.g. sanctions)
Upcoming startup events
Social network functionalities
Core Features
1. Dashboard
A personalized homepage showing:
Saved companies or investors
Alerts on funding rounds
Trending deals
Custom watchlists by region/sector

2. Companies Directory
Structured database of:
Startups, franchises, scaleups
Investment firms, family offices, PE/VC funds
Filtering by size, sector, location, tags
Growth metrics & last known valuation

3. Funding Rounds
Live database of:
Angel to Series D+ rounds
M&A and secondary deals
Deal tags: exits, $100M+ rounds, IPO prep
Historical & upcoming rounds (if public)

4. Rankings
Benchmarks based on:
Universities
Top ecosystems (by deal volume)

5. Unicorn Tracker
Live list of global unicorns with:
Valuation timeline
Investors per round
Revenue growth (if available)

6. Investor Database
Investor profiles showing:
Contact info (email, website, LinkedIn)
Funding history
Typical ticket size
Sector and geography focus

7. Accelerators & Incubators
Searchable profiles with:
Program duration and stage focus
Application deadlines
Alumni success rate
Contact details

8. Grants
Database of public/private grants:
Filterable by country, sector, funding size
Includes deadlines and requirements
Option to "track" a grant for updates

9. Crowdfunding
Live and upcoming campaigns:
From platforms like Seedrs, Wefunder, Republic
Prediction score (success estimate)
Campaign stage and stats

10. News
Curated market intelligence:
Startup launches
Notable fundraises
M&A movements
Sector trend articles

11. Events
Calendar of:
Demo days
Founder meetups
Investor summits
VC-hosted pitch events

12. Sanctions List
Compliance tool that flags:
Individuals/entities under international sanctions
Useful for investor due diligence

Missing (Planned) Functionalities
User profiles with role distinction (founder vs investor)
Financial statements (e.g. simplified income statements, balance sheets)
M&A API integration (e.g. Pitchbook-style deal feeds)

Tech Stack
Frontend: React (using MUI templates)
Backend: JavaScript
Database: Supabase
Hosting: Vercel
Documentation Code: Github

Navigation / Pages
Dashboard
Companies
Funding Rounds
Unicorns
Grants
Investors
Accelerators
Events
News
Rankings
Sanctions
Profile / Settings

Design Style & UX
Clean, professional interface (use template)
Optimized for desktop, both for big and small screens
Accessible color palette (investor dashboards used frequently)
Minimalist but information-dense layout (like Pitchbook or CB Insights)

Authentication
Email/password or Google login


Database stucture in sup abase:
create table public.accelerators (
  name text null,
  website text null,
  country text null,
  city text null,
  industries text null,
  founders text null,
  founded_date date null,
  number_of_investments integer null,
  number_of_exits integer null,
  id bigint generated by default as identity not null,
  constraint accelerators_pkey primary key (id),
  constraint accelerators_id_key unique (id)
) TABLESPACE pg_default;   create table public.companies_franchises (
  url text null,
  title text null,
  image text null,
  rank text null,
  rank_year text null,
  initial_investment text null,
  units_as_of_2024 text null,
  description text null,
  related_franchises jsonb null,
  industry text null,
  related_categories text null,
  founded numeric null,
  parent_company text null,
  leadership text null,
  corporate_address text null,
  social text null,
  franchising_since text null,
  num_of_employees_at_hq integer null,
  where_seeking text null,
  num_of_units integer null,
  initial_franchise_fee text null,
  net_worth_requirement text null,
  cash_requirement text null,
  royalty_fee text null,
  ad_royalty_fee text null,
  term_of_agreement text null,
  is_franchise_term_renewable boolean null,
  third_party_financing text null,
  on_the_job_training text null,
  classroom_training text null,
  ongoing_support text null,
  marketing_support text null,
  is_absentee_ownership_allowed boolean null,
  can_this_franchise_be_run_from_home boolean null,
  can_this_franchise_be_run_part_time boolean null,
  are_exclusive_territories_available boolean null,
  num_of_employees_required_to_run integer null,
  veteran_incentives text null,
  in_house_financing text null,
  id bigint generated by default as identity not null,
  constraint companies_franchises_pkey primary key (id),
  constraint companies_franchises_id_key unique (id)
) TABLESPACE pg_default;  
create table public.companies_growth (
  id serial not null,
  url text null,
  name text null,
  location text null,
  growjo_ranking text null,
  industry text null,
  annual_revenue text null,
  estimated_revenue_per_employee text null,
  total_funding text null,
  current_valuation text null,
  employees text null,
  grew_employee_count text null,
  competitors text null,
  news text null,
  total_funding_duplicate text null,
  number_of_employees text null,
  estimated_revenue text null,
  employee_growth_percent text null,
  valuation text null,
  accelerator text null,
  what_is text null,
  image text null,
  anthropic_competitors text null,
  other_companies text null,
  created_at timestamp without time zone null default now(),
  updated_at timestamp without time zone null default now(),
  constraint companies_growth_pkey primary key (id)
) TABLESPACE pg_default;


create table public.companies_startups (
  id serial not null,
  image text null,
  name text null,
  country text null,
  state text null,
  rank text null,
  sr_score2 text null,
  sr_web text null,
  sr_social text null,
  short_description text null,
  long_description text null,
  website text null,
  founded text null,
  facebook text null,
  twitter text null,
  linkedin text null,
  tags text null,
  moz_domain_auth text null,
  moz_page_auth text null,
  facebook_fans text null,
  facebook_engagement text null,
  twitter_followers text null,
  twitter_engagement text null,
  competitors_table text null,
  funding_table text null,
  acquisitions_table text null,
  products_table text null,
  team_table text null,
  news_table text null,
  statistics_table text null,
  created_at timestamp with time zone null default CURRENT_TIMESTAMP,
  updated_at timestamp with time zone null default CURRENT_TIMESTAMP,
  url text null,
  constraint companies_startups_pkey primary key (id)
) TABLESPACE pg_default;

create index IF not exists idx_companies_startups_name on public.companies_startups using btree (name) TABLESPACE pg_default;

create index IF not exists idx_companies_startups_country on public.companies_startups using btree (country) TABLESPACE pg_default;

create index IF not exists idx_companies_startups_rank on public.companies_startups using btree (rank) TABLESPACE pg_default;


create table public.companies_startups (
  id serial not null,
  image text null,
  name text null,
  country text null,
  state text null,
  rank text null,
  sr_score2 text null,
  sr_web text null,
  sr_social text null,
  short_description text null,
  long_description text null,
  website text null,
  founded text null,
  facebook text null,
  twitter text null,
  linkedin text null,
  tags text null,
  moz_domain_auth text null,
  moz_page_auth text null,
  facebook_fans text null,
  facebook_engagement text null,
  twitter_followers text null,
  twitter_engagement text null,
  competitors_table text null,
  funding_table text null,
  acquisitions_table text null,
  products_table text null,
  team_table text null,
  news_table text null,
  statistics_table text null,
  created_at timestamp with time zone null default CURRENT_TIMESTAMP,
  updated_at timestamp with time zone null default CURRENT_TIMESTAMP,
  url text null,
  constraint companies_startups_pkey primary key (id)
) TABLESPACE pg_default;

create index IF not exists idx_companies_startups_name on public.companies_startups using btree (name) TABLESPACE pg_default;

create index IF not exists idx_companies_startups_country on public.companies_startups using btree (country) TABLESPACE pg_default;

create index IF not exists idx_companies_startups_rank on public.companies_startups using btree (rank) TABLESPACE pg_default;


create table public.companies_startups (
  id serial not null,
  image text null,
  name text null,
  country text null,
  state text null,
  rank text null,
  sr_score2 text null,
  sr_web text null,
  sr_social text null,
  short_description text null,
  long_description text null,
  website text null,
  founded text null,
  facebook text null,
  twitter text null,
  linkedin text null,
  tags text null,
  moz_domain_auth text null,
  moz_page_auth text null,
  facebook_fans text null,
  facebook_engagement text null,
  twitter_followers text null,
  twitter_engagement text null,
  competitors_table text null,
  funding_table text null,
  acquisitions_table text null,
  products_table text null,
  team_table text null,
  news_table text null,
  statistics_table text null,
  created_at timestamp with time zone null default CURRENT_TIMESTAMP,
  updated_at timestamp with time zone null default CURRENT_TIMESTAMP,
  url text null,
  constraint companies_startups_pkey primary key (id)
) TABLESPACE pg_default;

create index IF not exists idx_companies_startups_name on public.companies_startups using btree (name) TABLESPACE pg_default;

create index IF not exists idx_companies_startups_country on public.companies_startups using btree (country) TABLESPACE pg_default;

create index IF not exists idx_companies_startups_rank on public.companies_startups using btree (rank) TABLESPACE pg_default;


create table public.events (
  id serial not null,
  event_name text null,
  location text null,
  start_date timestamp with time zone null,
  end_date timestamp with time zone null,
  event_type text null,
  link text null,
  created_at timestamp with time zone null default CURRENT_TIMESTAMP,
  updated_at timestamp with time zone null default CURRENT_TIMESTAMP,
  constraint events_pkey primary key (id)
) TABLESPACE pg_default;

create index IF not exists idx_events_start_date on public.events using btree (start_date) TABLESPACE pg_default;

create index IF not exists idx_events_end_date on public.events using btree (end_date) TABLESPACE pg_default;

create index IF not exists idx_events_event_type on public.events using btree (event_type) TABLESPACE pg_default;

create table public.events (
  id serial not null,
  event_name text null,
  location text null,
  start_date timestamp with time zone null,
  end_date timestamp with time zone null,
  event_type text null,
  link text null,
  created_at timestamp with time zone null default CURRENT_TIMESTAMP,
  updated_at timestamp with time zone null default CURRENT_TIMESTAMP,
  constraint events_pkey primary key (id)
) TABLESPACE pg_default;

create index IF not exists idx_events_start_date on public.events using btree (start_date) TABLESPACE pg_default;

create index IF not exists idx_events_end_date on public.events using btree (end_date) TABLESPACE pg_default;

create index IF not exists idx_events_event_type on public.events using btree (event_type) TABLESPACE pg_default;


create table public.funding_rounds_exits (
  id serial not null,
  company text null,
  exit_value_billions numeric(10, 2) null,
  exit_type text null,
  total_funding_millions numeric(15, 2) null,
  industry text null,
  deal_closed_date date null,
  created_at timestamp with time zone null default CURRENT_TIMESTAMP,
  updated_at timestamp with time zone null default CURRENT_TIMESTAMP,
  constraint funding_rounds_exits_pkey primary key (id)
) TABLESPACE pg_default;

create index IF not exists idx_exits_company on public.funding_rounds_exits using btree (company) TABLESPACE pg_default;

create index IF not exists idx_exits_exit_value on public.funding_rounds_exits using btree (exit_value_billions) TABLESPACE pg_default;

create index IF not exists idx_exits_exit_type on public.funding_rounds_exits using btree (exit_type) TABLESPACE pg_default;

create index IF not exists idx_exits_industry on public.funding_rounds_exits using btree (industry) TABLESPACE pg_default;

create index IF not exists idx_exits_deal_date on public.funding_rounds_exits using btree (deal_closed_date) TABLESPACE pg_default;


create table public.funding_rounds_ma_deals (
  id serial not null,
  announced_date date null,
  acquiring_company text null,
  acquired_company text null,
  deal_size_billions numeric(20, 3) null,
  deal_size_original text null,
  created_at timestamp with time zone null default CURRENT_TIMESTAMP,
  updated_at timestamp with time zone null default CURRENT_TIMESTAMP,
  constraint funding_rounds_ma_deals_pkey primary key (id)
) TABLESPACE pg_default;

create index IF not exists idx_ma_deals_date on public.funding_rounds_ma_deals using btree (announced_date) TABLESPACE pg_default;

create index IF not exists idx_ma_deals_acquirer on public.funding_rounds_ma_deals using btree (acquiring_company) TABLESPACE pg_default;

create index IF not exists idx_ma_deals_acquired on public.funding_rounds_ma_deals using btree (acquired_company) TABLESPACE pg_default;

create index IF not exists idx_ma_deals_size on public.funding_rounds_ma_deals using btree (deal_size_billions) TABLESPACE pg_default;


create table public.funding_rounds_megadeals (
  id serial not null,
  rank integer null,
  value_usd numeric(20, 2) null,
  acquired_country text null,
  acquired_entity text null,
  acquirer_country text null,
  acquirer_entity text null,
  year integer null,
  transaction_type text null,
  created_at timestamp with time zone null default CURRENT_TIMESTAMP,
  updated_at timestamp with time zone null default CURRENT_TIMESTAMP,
  constraint funding_rounds_megadeals_pkey primary key (id)
) TABLESPACE pg_default;

create index IF not exists idx_ma_rank on public.funding_rounds_megadeals using btree (rank) TABLESPACE pg_default;

create index IF not exists idx_ma_year on public.funding_rounds_megadeals using btree (year) TABLESPACE pg_default;

create index IF not exists idx_ma_acquirer on public.funding_rounds_megadeals using btree (acquirer_entity) TABLESPACE pg_default;

create index IF not exists idx_ma_acquired on public.funding_rounds_megadeals using btree (acquired_entity) TABLESPACE pg_default;



create table public.funding_rounds_us_sfd_23 (
  id serial not null,
  company text null,
  amount numeric(20, 2) null,
  lead_investors text null,
  valuation numeric(20, 2) null,
  industry text null,
  date_reported date null,
  created_at timestamp with time zone null default CURRENT_TIMESTAMP,
  updated_at timestamp with time zone null default CURRENT_TIMESTAMP,
  constraint funding_rounds_us_sfd_23_pkey primary key (id)
) TABLESPACE pg_default;



create table public.funding_rounds_us_sfd_24 (
  id serial not null,
  company text null,
  amount numeric(20, 2) null,
  lead_investors text null,
  valuation numeric(20, 2) null,
  industry text null,
  date_reported date null,
  created_at timestamp with time zone null default CURRENT_TIMESTAMP,
  updated_at timestamp with time zone null default CURRENT_TIMESTAMP,
  constraint funding_rounds_us_sfd_24_pkey primary key (id)
) TABLESPACE pg_default;

create index IF not exists idx_funding_rounds_company on public.funding_rounds_us_sfd_24 using btree (company) TABLESPACE pg_default;

create index IF not exists idx_funding_rounds_amount on public.funding_rounds_us_sfd_24 using btree (amount) TABLESPACE pg_default;

create index IF not exists idx_funding_rounds_industry on public.funding_rounds_us_sfd_24 using btree (industry) TABLESPACE pg_default;

create index IF not exists idx_funding_rounds_date on public.funding_rounds_us_sfd_24 using btree (date_reported) TABLESPACE pg_default;


create table public.grants (
  id uuid not null default gen_random_uuid (),
  title text null,
  acronym text null,
  project_id text null,
  status text null,
  start_date timestamp without time zone null,
  end_date timestamp without time zone null,
  overall_budget numeric(20, 2) null,
  eu_contribution numeric(20, 2) null,
  coordinated_by text null,
  funded_under text null,
  objective text null,
  programme text null,
  topic text null,
  type_of_action text null,
  constraint grants_duplicate_pkey primary key (id)
) TABLESPACE pg_default;


create table public.grants (
  id uuid not null default gen_random_uuid (),
  title text null,
  acronym text null,
  project_id text null,
  status text null,
  start_date timestamp without time zone null,
  end_date timestamp without time zone null,
  overall_budget numeric(20, 2) null,
  eu_contribution numeric(20, 2) null,
  coordinated_by text null,
  funded_under text null,
  objective text null,
  programme text null,
  topic text null,
  type_of_action text null,
  constraint grants_duplicate_pkey primary key (id)
) TABLESPACE pg_default;


CREATE  TABLE public.investor_contacts (
  id text NOT NULL,
  company_name text NULL,
  employees_people_database text NULL,
  number_of_investments text NULL,
  number_of_exits text NULL,
  location text NULL,
  investor_type text NULL,
  description text NULL,
  company_url text NULL,
  domain text NULL,
  facebook text NULL,
  instagram text NULL,
  linkedin text NULL,
  twitter text NULL,
  contact_email text NULL,
  contact_email_verified? text NULL,
  2nd_email_100%_verified text NULL,
  phone_number text NULL,
  industries text NULL,
  program text NULL,
  key_people text NULL,
  country text NULL,
  _1 text NULL,
  _2 text NULL,
  _3 text NULL,
  _4 text NULL,
  _5 text NULL,
  _6 text NULL,
  _7 text NULL,
  CONSTRAINT investor_contacts_pkey PRIMARY KEY (id)
) TABLESPACE pg_default;

CREATE  TABLE public.investor_contacts (
  id text NOT NULL,
  company_name text NULL,
  employees_people_database text NULL,
  number_of_investments text NULL,
  number_of_exits text NULL,
  location text NULL,
  investor_type text NULL,
  description text NULL,
  company_url text NULL,
  domain text NULL,
  facebook text NULL,
  instagram text NULL,
  linkedin text NULL,
  twitter text NULL,
  contact_email text NULL,
  contact_email_verified? text NULL,
  2nd_email_100%_verified text NULL,
  phone_number text NULL,
  industries text NULL,
  program text NULL,
  key_people text NULL,
  country text NULL,
  _1 text NULL,
  _2 text NULL,
  _3 text NULL,
  _4 text NULL,
  _5 text NULL,
  _6 text NULL,
  _7 text NULL,
  CONSTRAINT investor_contacts_pkey PRIMARY KEY (id)
) TABLESPACE pg_default;


create table public.live_funding (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  company_name character varying null,
  round_type character varying null,
  funding_amount numeric null,
  currency character varying null,
  ceo json null,
  company_info json null,
  main_category character varying null,
  date_seen date null,
  country text null,
  size text null,
  constraint live_funding_pkey primary key (id)
) TABLESPACE pg_default;


create table public.rankings_top_cities (
  id serial not null,
  rank integer not null,
  city text not null,
  country text not null,
  rank_change text null,
  total_score numeric(8, 3) null,
  created_at timestamp with time zone null default CURRENT_TIMESTAMP,
  updated_at timestamp with time zone null default CURRENT_TIMESTAMP,
  constraint rankings_top_cities_pkey primary key (id)
) TABLESPACE pg_default;

create index IF not exists idx_rankings_top_cities_rank on public.rankings_top_cities using btree (rank) TABLESPACE pg_default;

create index IF not exists idx_rankings_top_cities_city on public.rankings_top_cities using btree (city) TABLESPACE pg_default;

create index IF not exists idx_rankings_top_cities_country on public.rankings_top_cities using btree (country) TABLESPACE pg_default;

create index IF not exists idx_rankings_top_cities_score on public.rankings_top_cities using btree (total_score) TABLESPACE pg_default;

create table public.rankings_top_countries (
  id serial not null,
  rank integer not null,
  country text not null,
  rank_change text null,
  total_score numeric(8, 3) null,
  created_at timestamp with time zone null default CURRENT_TIMESTAMP,
  updated_at timestamp with time zone null default CURRENT_TIMESTAMP,
  constraint rankings_top_countries_pkey primary key (id)
) TABLESPACE pg_default;

create index IF not exists idx_rankings_top_countries_rank on public.rankings_top_countries using btree (rank) TABLESPACE pg_default;

create index IF not exists idx_rankings_top_countries_country on public.rankings_top_countries using btree (country) TABLESPACE pg_default;

create index IF not exists idx_rankings_top_countries_score on public.rankings_top_countries using btree (total_score) TABLESPACE pg_default;



create table public.rankings_universities (
  id serial not null,
  rank integer null,
  name text not null,
  country text null,
  student_population integer null,
  students_to_staff_ratio numeric(4, 1) null,
  international_students text null,
  female_to_male_ratio text null,
  overall_score numeric(4, 1) null,
  teaching_score numeric(4, 1) null,
  research_environment_score numeric(4, 1) null,
  research_quality_score numeric(4, 1) null,
  industry_impact_score numeric(4, 1) null,
  international_outlook_score numeric(4, 1) null,
  year integer null,
  created_at timestamp with time zone null default CURRENT_TIMESTAMP,
  updated_at timestamp with time zone null default CURRENT_TIMESTAMP,
  constraint rankings_universities_pkey primary key (id)
) TABLESPACE pg_default;

create index IF not exists idx_rankings_universities_rank on public.rankings_universities using btree (rank) TABLESPACE pg_default;

create index IF not exists idx_rankings_universities_name on public.rankings_universities using btree (name) TABLESPACE pg_default;

create index IF not exists idx_rankings_universities_country on public.rankings_universities using btree (country) TABLESPACE pg_default;

create index IF not exists idx_rankings_universities_year on public.rankings_universities using btree (year) TABLESPACE pg_default;

create table public.sanction_list_entities (
  entityid serial not null,
  referencenumber text null,
  firstname text null,
  listedon date null,
  comments text null,
  entityalias text null,
  entityaddress text null,
  applicationstatus text null,
  constraint sanction_list_entities_pkey primary key (entityid)
) TABLESPACE pg_default;


create table public.sanction_list_extended (
  id serial not null,
  name text null,
  region_or_address text null,
  entity_type text null,
  programs text null,
  list_type text null,
  country text null,
  created_at timestamp with time zone null default CURRENT_TIMESTAMP,
  updated_at timestamp with time zone null default CURRENT_TIMESTAMP,
  constraint sanction_list_extended_pkey primary key (id)
) TABLESPACE pg_default;


create table public.sanction_list_individual (
  id serial not null,
  individual_id text null,
  reference_number text null,
  full_name text null,
  listed_on text null,
  comments text null,
  title text null,
  designation text null,
  individual_date_of_birth text null,
  individual_place_of_birth text null,
  individual_alias text null,
  nationality text null,
  individual_document text null,
  individual_address text null,
  application_status text null,
  created_at timestamp with time zone null default CURRENT_TIMESTAMP,
  updated_at timestamp with time zone null default CURRENT_TIMESTAMP,
  constraint sanction_list_individual_pkey primary key (id)
) TABLESPACE pg_default;

create index IF not exists idx_sanction_list_individual_reference on public.sanction_list_individual using btree (reference_number) TABLESPACE pg_default;

create index IF not exists idx_sanction_list_individual_name on public.sanction_list_individual using btree (full_name) TABLESPACE pg_default;

create index IF not exists idx_sanction_list_individual_nationality on public.sanction_list_individual using btree (nationality) TABLESPACE pg_default;


create table public.unicorns (
  id serial not null,
  company text not null,
  post_money_value text null,
  total_equity_funding text null,
  lead_investors text null,
  country text null,
  continent text null,
  type text null default 'biggest'::text,
  created_at timestamp with time zone null default CURRENT_TIMESTAMP,
  updated_at timestamp with time zone null default CURRENT_TIMESTAMP,
  constraint unicorns_pkey primary key (id)
) TABLESPACE pg_default;

create index IF not exists idx_unicorns_company on public.unicorns using btree (company) TABLESPACE pg_default;

create index IF not exists idx_unicorns_country on public.unicorns using btree (country) TABLESPACE pg_default;

create index IF not exists idx_unicorns_continent on public.unicorns using btree (continent) TABLESPACE pg_default;

create index IF not exists idx_unicorns_type on public.unicorns using btree (type) TABLESPACE pg_default;   

All the database is setup and for auth you have to use subavase authentication it is also setup for email
